"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[448],{8212:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=i(4848),o=i(8453);const r={},t="Window",c={id:"api/window",title:"Window",description:"Use Window to control app windows. Every screen (i.e. display) combines to form a large rectangle. Every window lives within this rectangle and their position can be altered by giving coordinates inside this rectangle. To position a window to a specific display, you need to calculate its position within the large rectangle. To figure out the coordinates for a given screen, use the functions in Screen. Beware that a window can get stale if you keep a reference to it and it is for instance closed while you do so.",source:"@site/docs/api/window.md",sourceDirName:"api",slug:"/api/window",permalink:"/phoenix/api/window",draft:!1,unlisted:!1,editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/api/window.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Timer",permalink:"/phoenix/api/timer"}},d={},l=[{value:"Interface",id:"interface",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"Window Optionals",id:"window-optionals",level:3},{value:"Instance Methods",id:"instance-methods",level:2},{value:"Others Optionals",id:"others-optionals",level:3},{value:"Events",id:"events",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"window",children:"Window"}),"\n",(0,s.jsxs)(n.p,{children:["Use Window to control app windows. Every screen (i.e. display) combines to form a large rectangle. Every window lives within this rectangle and their position can be altered by giving coordinates inside this rectangle. To position a window to a specific display, you need to calculate its position within the large rectangle. To figure out the coordinates for a given screen, use the functions in ",(0,s.jsx)(n.code,{children:"Screen"}),". Beware that a window can get stale if you keep a reference to it and it is for instance closed while you do so."]}),"\n",(0,s.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class Window implements Identifiable\n\n  static Window focused()\n  static Window at(Point point)\n  static Array<Window> all(Map<String, AnyObject> optionals)\n  static Array<Window> recent()\n\n  Array<Window> others(Map<String, AnyObject> optionals)\n  String title()\n  boolean isMain()\n  boolean isNormal()\n  boolean isFullScreen()\n  boolean isMinimised() // or isMinimized()\n  boolean isVisible()\n  App app()\n  Screen screen()\n  Array<Space> spaces() // macOS 10.11+\n  Point topLeft()\n  Size size()\n  Rectangle frame()\n  boolean setTopLeft(Point point)\n  boolean setSize(Size size)\n  boolean setFrame(Rectangle frame)\n  boolean setFullScreen(boolean value)\n  boolean maximise() // or maximize()\n  boolean minimise() // or minimize()\n  boolean unminimise() // or unminimize()\n  Array<Window> neighbours(String direction) // or neighbors(...)\n  boolean raise()\n  boolean focus()\n  boolean focusClosestNeighbour(String direction) // or focusClosestNeighbor(...)\n  boolean close()\n\nend\n"})}),"\n",(0,s.jsx)(n.h2,{id:"static-methods",children:"Static Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"focused()"})," returns the focused window for the currently active app, can be ",(0,s.jsx)(n.code,{children:"undefined"})," if no window is focused currently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"at(Point point)"})," returns the topmost window at the specified point, can be ",(0,s.jsx)(n.code,{children:"undefined"})," if no window is present at the given position"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"all(Map<String, AnyObject> optionals)"})," returns all windows in screens if no optionals are given"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recent()"})," returns all visible windows in the order as they appear on the screen (from front to back), essentially returning them in the most-recently-used order"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"window-optionals",children:"Window Optionals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"visible"})," (boolean): if set ",(0,s.jsx)(n.code,{children:"true"})," returns all visible windows in screens, if set ",(0,s.jsx)(n.code,{children:"false"})," returns all hidden windows in screens"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"instance-methods",children:"Instance Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"others(Map<String, AnyObject> optionals)"})," returns all other windows on all screens if no optionals are given"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"title()"})," returns the title for the window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isMain()"})," returns ",(0,s.jsx)(n.code,{children:"true"})," if the window is the main window for its app"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isNormal()"})," returns ",(0,s.jsx)(n.code,{children:"true"})," if the window is a normal window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isFullScreen()"})," returns ",(0,s.jsx)(n.code,{children:"true"})," if the window is a full screen window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isMinimised()"})," or ",(0,s.jsx)(n.code,{children:"isMinimized()"})," returns ",(0,s.jsx)(n.code,{children:"true"})," if the window is minimised"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isVisible()"})," returns ",(0,s.jsx)(n.code,{children:"true"})," if the window is a normal and unminimised window that belongs to an unhidden app"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app()"})," returns the app for the window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"screen()"})," returns the screen where most or all of the window is currently present, can be ",(0,s.jsx)(n.code,{children:"undefined"})," if a window is out of bounds of any screen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"spaces()"})," returns the spaces where the window is currently present (macOS 10.11+, returns an empty list otherwise)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"topLeft()"})," returns the top left point for the window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"size()"})," returns the size for the window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"frame()"})," returns the frame for the window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setTopLeft(Point point)"})," sets the top left point for the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setSize(Size size)"})," sets the size for the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setFrame(Rectangle frame)"})," sets the frame for the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setFullScreen(boolean value)"})," sets whether the window is full screen, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maximise()"})," or ",(0,s.jsx)(n.code,{children:"maximize()"})," resizes the window to fit the whole visible frame for the screen, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minimise()"})," or ",(0,s.jsx)(n.code,{children:"minimize()"})," minimises the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unminimise()"})," or ",(0,s.jsx)(n.code,{children:"unminimize()"})," unminimises the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"neighbours(String direction)"})," or ",(0,s.jsx)(n.code,{children:"neighbors(...)"})," returns windows to the direction (",(0,s.jsx)(n.code,{children:"west|east|north|south"}),") of the window"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"raise()"})," makes the window the frontmost window of its app (but does not focus the app itself), returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"focus()"})," focuses the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"focusClosestNeighbour(String direction)"})," or ",(0,s.jsx)(n.code,{children:"focusClosestNeighbor(...)"})," focuses the closest window to the direction (",(0,s.jsx)(n.code,{children:"west|east|north|south"}),") of the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"close()"})," closes the window, returns ",(0,s.jsx)(n.code,{children:"true"})," if successful"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"others-optionals",children:"Others Optionals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"visible"})," (boolean): if set ",(0,s.jsx)(n.code,{children:"true"})," returns visible windows, if set ",(0,s.jsx)(n.code,{children:"false"})," returns hidden windows"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"screen"})," (Screen): returns all other windows on the specified screen"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"events#window",children:"Events"})," for a list of available events for Window."]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Return all windows across all screens\nconst windows = Window.all();\n\n// Move the focused window to origo\nWindow.focused().setTopLeft({ x: 0, y: 0 });\n\n// Resize the focused window\nWindow.focused().setSize({ width: 1000, height: 500 });\n\n// Resize the focused window to fill the full screen\nWindow.focused().maximise();\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var s=i(6540);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);