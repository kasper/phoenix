"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[197],{7791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=n(4848),a=n(8453);const r={},o="Storage",i={id:"api/storage",title:"Storage",description:"Use Storage to store values across reloads and reboots as JSON.",source:"@site/docs/api/storage.md",sourceDirName:"api",slug:"/api/storage",permalink:"/phoenix/api/storage",draft:!1,unlisted:!1,editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/api/storage.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Space",permalink:"/phoenix/api/space"},next:{title:"Task",permalink:"/phoenix/api/task"}},c={},l=[{value:"Interface",id:"interface",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"Example",id:"example",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"storage",children:"Storage"}),"\n",(0,s.jsx)(t.p,{children:"Use Storage to store values across reloads and reboots as JSON."}),"\n",(0,s.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"class Storage\n\n  static void set(String key, AnyObject value)\n  static AnyObject get(String key)\n  static void remove(String key)\n\nend\n"})}),"\n",(0,s.jsx)(t.h2,{id:"static-methods",children:"Static Methods"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"set(String key, AnyObject value)"})," stores the value for the key, any previously set value with the same key will be overridden"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"get(String key)"})," retrieves and returns the value for the key (",(0,s.jsx)(t.code,{children:"undefined"})," if no value has been set)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"remove(String key)"})," removes the key and the value associated with it"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"// Set a value\nStorage.set('key', 'value');\nStorage.set('height', 100);\nStorage.set('isEnabled', true);\nStorage.set('settings', { isEnabled: true });\n\n// Get a value\nconst value = Storage.get('key');\nPhoenix.log(value); // -> 'value'\n\n// Remove a value\nStorage.remove('key');\n"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(6540);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);