"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[449],{4349:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>g,toc:()=>a});var t=o(4848),s=o(8453);const i={},r="Logging and Debugging",g={id:"getting-started/logging-and-debugging",title:"Logging and Debugging",description:"To log messages, use Phoenix.log. The messages are delivered to the Console (app). You can filter logs by process by searching for \u201cPhoenix\u201d. You can also follow the logs from a terminal by running log stream --process Phoenix.",source:"@site/docs/getting-started/6-logging-and-debugging.md",sourceDirName:"getting-started",slug:"/getting-started/logging-and-debugging",permalink:"/phoenix/getting-started/logging-and-debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/getting-started/6-logging-and-debugging.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"sidebar",previous:{title:"About Coordinates",permalink:"/phoenix/getting-started/about-coordinates"},next:{title:"TypeScript",permalink:"/phoenix/getting-started/typescript"}},c={},a=[{value:"Web Inspector",id:"web-inspector",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"logging-and-debugging",children:"Logging and Debugging"}),"\n",(0,t.jsxs)(n.p,{children:["To log messages, use ",(0,t.jsx)(n.code,{children:"Phoenix.log"}),". The messages are delivered to the Console (app). You can filter logs by process by searching for \u201cPhoenix\u201d. You can also follow the logs from a terminal by running ",(0,t.jsx)(n.code,{children:"log stream --process Phoenix"}),"."]}),"\n",(0,t.jsx)(n.admonition,{title:"console.log",type:"tip",children:(0,t.jsxs)(n.p,{children:["For convenience, ",(0,t.jsx)(n.code,{children:"console.log"})," is bound to ",(0,t.jsx)(n.code,{children:"Phoenix.log"}),". Choose whichever you prefer!"]})}),"\n",(0,t.jsx)(n.h2,{id:"web-inspector",children:"Web Inspector"}),"\n",(0,t.jsxs)(n.p,{children:["To debug your configuration, use Safari\u2019s Web Inspector. You can attach to the context from Safari\u2019s \u201cDevelop\u201d menu under your devices name. Read a more comprehensive ",(0,t.jsx)(n.a,{href:"https://github.com/kasper/phoenix/wiki/Attaching-to-Web-Inspector-for-Debugging/",children:"instruction"})," to get started. In the Web Inspector\u2019s Console you can also see messages outputted with ",(0,t.jsx)(n.code,{children:"console.log"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Due to macOS security restrictions, this only works on non-notarised versions of Phoenix (2.6.2 or older) or with debug builds built from the source."})})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>g});var t=o(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function g(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);